{"version":3,"sources":["logo.svg","reducers/ClientReducer.js","contexts/ClientContext.js","clients/client-liste.funct.component.jsx","clients/client-consult.funct.component.jsx","clients/client-fiche.funct.component.jsx","shared/header.component.jsx","shared/footer.component.jsx","static/images/logo.jpg","home/welcome.component.jsx","App.js","index.js"],"names":["ClientReducer","state","action","type","payload","clients","selectedClient","console","log","updatedClient","updatedClients","map","client","id","filter","initialState","CLIENT_API_BASE_URL","ClientContext","createContext","ClientContextProvider","children","useReducer","dispatch","findAll","a","axios","get","response","data","error","findById","save","isCreation","url","post","deleteById","Provider","value","getStorageMode","ClientListeComponent","useContext","useEffect","length","className","messages","liste","react","titre","fiche","nom","prenom","actions","to","consulter","modifier","title","onClick","supprimer","boutons","creer","listeVide","ClientConsultComponent","useParams","titres","consultation","annuler","ClientFicheComponent","history","useHistory","useForm","defaultValues","register","handleSubmit","watch","errors","reset","setValue","fetchClient","deleteThis","push","onSubmit","creation","modification","htmlFor","name","ref","required","minLength","message","validation","minlength","placeholder","nomPlaceHolder","prenomPlaceHolder","style","width","valider","disabled","HeaderComponent","props","Component","FooterComponent","WelcomeComponent","pageTitle","this","src","logo","alt","maxHeight","paddingBottom","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.976d9be8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export const ClientReducer = (state, action) => {\r\n\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case 'FIND_ALL':\r\n            //console.log('findAll' + payload);\r\n            return {\r\n                    ...state,\r\n                    clients : payload\r\n                }    \r\n        case 'FIND_BY_ID':\r\n            //console.log('findById' + payload);\r\n            return {\r\n                    ...state,\r\n                    selectedClient : payload\r\n                }    \r\n        case 'ADD':\r\n            console.log('add' + payload);    \r\n            return {\r\n                ...state,\r\n                clients : [...state.clients, payload]\r\n            }   \r\n\r\n        case 'EDIT':\r\n            console.log('edit' + payload);    \r\n            const updatedClient = payload;\r\n\r\n            const updatedClients = state.clients.map(client => {\r\n              if (client.id === updatedClient.id) {\r\n                return updatedClient;\r\n              }\r\n              return client;\r\n            })\r\n            return {\r\n              ...state,\r\n              clients: updatedClients\r\n            }\r\n\r\n        case 'DELETE_BY_ID':\r\n            //console.log('deleteById' + payload);\r\n            return {\r\n                ...state,\r\n                clients: state.clients.filter(client => {\r\n                    return client.id !== payload\r\n                })\r\n            }\r\n \r\n        default: \r\n          return state;\r\n    }\r\n};\r\n","import axios from 'axios';\r\nimport React, { createContext, useReducer } from 'react';\r\nimport { ClientReducer} from '../reducers/ClientReducer';\r\n\r\n// initital state\r\nconst initialState = {\r\n    clients: [],\r\n    selectedClient: null\r\n}\r\nconst isJsonServer  = false;\r\n\r\n//using json-server based on src/json/clients.json file\r\n//start: json-server --watch src\\json\\clients.json --port 3001\r\n//const CLIENT_API_BASE_URL = \"http://localhost:3001/clients\";\r\n//Spring Boot Api\r\n//const CLIENT_API_BASE_URL = \"http://localhost:8090/clients\";\r\n//SpringBoot API on Heroku\r\nconst CLIENT_API_BASE_URL = \"https://sample-crud-springboot.herokuapp.com/clients\";\r\n\r\n// create context\r\nconst ClientContext = createContext(initialState);\r\n\r\n// provider component\r\nconst ClientContextProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(ClientReducer, initialState);\r\n    //const [clients, setClients] = useState([]);\r\n\r\n    //get all clients\r\n    const findAll = async () => {\r\n        try {\r\n          let response = await axios.get(CLIENT_API_BASE_URL);\r\n          let { data } = response;\r\n    \r\n          dispatch({ type: \"FIND_ALL\", payload: data });\r\n          return data;\r\n\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n    };\r\n\r\n    //get client by id\r\n    const findById = async (id) =>{\r\n         try {\r\n            let response = await axios.get(CLIENT_API_BASE_URL + '/' + id);\r\n            let { data } = response;\r\n\r\n            dispatch({ type: \"FIND_BY_ID\", payload: data });\r\n            return data;\r\n\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n     }\r\n\r\n    //get storage mode\r\n    const getStorageMode = () => {\r\n        if (isJsonServer){\r\n            return 'json'\r\n        } else {\r\n            return 'db'\r\n        }\r\n    }\r\n\r\n    //create new Client or update existing one(HTTP POST)\r\n    const save = async (client, isCreation) => {\r\n        try {\r\n            let url;\r\n            let response;\r\n        \r\n            if (isCreation){//creation\r\n                if (isJsonServer){\r\n                    url = CLIENT_API_BASE_URL\r\n                } else {\r\n                    url = CLIENT_API_BASE_URL + '/new';\r\n                }\r\n                response = await axios.post(url, client);\r\n\r\n                //let { data } = response;\r\n                dispatch({ type: \"ADD\", payload: client });\r\n\r\n            } else { //modification\r\n                if (isJsonServer){\r\n                    url = CLIENT_API_BASE_URL + '/' + client.id;\r\n                    //console.log('put'+url+client);\r\n                    response = await axios.put(url, client);\r\n                } else {\r\n                    url = CLIENT_API_BASE_URL + '/' + client.id + '/edit';\r\n                    response = await axios.post(url, client);\r\n                }\r\n                //let { data } = response;\r\n                dispatch({ type: \"EDIT\", payload: client });\r\n          }\r\n          //console.log(data);\r\n          //return data;\r\n\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n    }\r\n\r\n    //delete a client by id \r\n    const deleteById = async (id) => {\r\n\r\n        try {\r\n            let url;\r\n            let response;\r\n            if (isJsonServer){\r\n                url = CLIENT_API_BASE_URL + '/'+ id;\r\n                response = await axios.delete(url);\r\n            } else {\r\n                url = CLIENT_API_BASE_URL + '/'+ id + '/delete';\r\n                response = await axios.get(url);\r\n            }\r\n\r\n            //let { data } = response;\r\n      \r\n            dispatch({ type: \"DELETE_BY_ID\", payload: id });\r\n            //console.log(data);\r\n            //return data;\r\n          } catch (error) {\r\n            console.error(error);\r\n          }\r\n    }\r\n    \r\n\r\n\r\n    return (<ClientContext.Provider value={{ clients: state.clients, \r\n                                             client: state.selectedClient,\r\n                                             findAll,\r\n                                             findById,\r\n                                             getStorageMode,\r\n                                             save,\r\n                                             deleteById\r\n                                           }}>\r\n        {children}\r\n    </ClientContext.Provider>);\r\n}\r\n\r\nexport { ClientContext, ClientContextProvider };","import React, { useContext, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { ClientContext } from \"../contexts/ClientContext\";\r\nimport messages from '../static/messages.json';\r\n\r\nconst  ClientListeComponent  = () => {\r\n    const { clients, findAll, deleteById, getStorageMode } = useContext(ClientContext);\r\n\r\n    useEffect(() => {\r\n        findAll();\r\n    }, [clients])\r\n\r\n    return clients?.length ? (\r\n        <div className='card'>\r\n            <div className='card-header'>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8\">\r\n                        <h1>{ messages.liste.clients.react.titre}</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='card-body'>\r\n                <div className='table-responsive'>\r\n                    <table className = 'table table-bordered table-striped'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>{messages.fiche.client.nom}</th>\r\n                                <th>{messages.fiche.client.prenom}</th>\r\n                                <th>{messages.liste.actions.titre}</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                clients.map(\r\n                                    client => \r\n                                    <tr key = {client.id}>\r\n                                        <td> {client.nom} </td>   \r\n                                        <td> {client.prenom}</td>\r\n                                        <td>\r\n                                            <Link to={`/clients/${client.id}`} className=\"btn btn-outline-primary btn-sm\">\r\n                                                    { messages.liste.actions.consulter}\r\n                                            </Link> | \r\n                                            <Link to={`/clients/${client.id}/edit`} className=\"btn btn-outline-primary btn-sm\" >\r\n                                                { messages.liste.actions.modifier}\r\n                                            </Link> | \r\n                                            <button  className=\"btn btn-outline-primary btn-sm\" \r\n                                                     title=\"{{ messages.liste.actions.supprimerTitle}}\"\r\n                                                     onClick={ () => deleteById(client.id)}\r\n                                                     >\r\n                                                { messages.liste.actions.supprimer} <i className=\"fa fa-trash\"></i>\r\n                                            </button>\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className='panel'>\r\n                    <Link to={'/clients/new'} className=\"btn btn btn-outline-primary btn-sm\">\r\n                       { messages.fiche.boutons.creer}\r\n                    </Link>\r\n                </div>\r\n\r\n                </div>\r\n                <p>Storage mode: {getStorageMode()} </p>\r\n        </div>\r\n        \r\n    ): \r\n    (\r\n        <div className=\"empty\"><h4 className=\"text-center\">{messages.liste.clients.listeVide}</h4></div>\r\n    );\r\n    \r\n}\r\n\r\nexport default ClientListeComponent;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { ClientContext } from \"../contexts/ClientContext\";\r\nimport messages from '../static/messages.json';\r\n\r\nconst  ClientConsultComponent  = () => {\r\n\r\n    const { id } = useParams();\r\n    const { client, findById } = useContext(ClientContext);\r\n\r\n    useEffect(() => {\r\n        findById(id);\r\n    }, [id]);\r\n\r\n    return (\r\n        <div className='card'>\r\n            \r\n            <div className='card-header'>\r\n                <h4>{ messages.fiche.client.titres.consultation  + client?.prenom + ' ' + client?.nom}</h4>\r\n            </div>\r\n\r\n            <div className='card-body'>\r\n                <div className='row'>\r\n                <div className='col-md-2'>{messages.fiche.client.nom}</div>\r\n                <div className='col-md-4'>{client?.nom}</div>\r\n                </div>\r\n                <div className='row'>\r\n                <div className='col-md-2'>{messages.fiche.client.prenom}</div>\r\n                <div className='col-md-4'>{client?.prenom}</div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='card-footer'>\r\n                <Link to={'/clients'} className='btn btn-outline-secondary'>\r\n                  <i className='fa fa-chevron-left'></i> {messages.fiche.boutons.annuler}\r\n                </Link>\r\n                <Link to={`/clients/${id}/edit`} className='btn btn-outline-primary'>\r\n                  {messages.liste.actions.modifier}\r\n                </Link>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientConsultComponent","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useForm } from 'react-hook-form';\r\nimport { ClientContext } from \"../contexts/ClientContext\";\r\nimport messages from '../static/messages.json';\r\n\r\nconst  ClientFicheComponent  = () => {\r\n\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    const { client, clients, findById, save, deleteById} = useContext(ClientContext);\r\n\r\n    const defaultValues = {\r\n        nom: '',\r\n        prenom : ''\r\n    };\r\n    const { register, handleSubmit, watch, errors, setValue, reset} = useForm({defaultValues});\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchClient = async (id) => {\r\n            const selectedClient = await findById(id);\r\n            //console.log(selectedClient);\r\n            //console.log(client);\r\n\r\n            //setValue(\"nom\", client?.nom);\r\n            //setValue(\"prenom\", client?.prenom); \r\n            reset({\r\n                nom:    `${selectedClient?.nom}`,\r\n                prenom: `${selectedClient?.prenom}`\r\n            });\r\n        }\r\n\r\n        if(typeof(id) === 'undefined'){\r\n            return\r\n        } else {  \r\n            fetchClient(id);\r\n        }\r\n    }, []);\r\n\r\n    const onSubmit =  (data) => {\r\n        //console.log('client => ' + JSON.stringify(data));\r\n        let client = {id: id, nom: data.nom, prenom: data.prenom};\r\n\r\n        if(typeof(id) === 'undefined'){\r\n            save(client, true);\r\n        }else{\r\n            //console.log(client);\r\n            save(client, false);\r\n        }\r\n\r\n        //props.history.push(\"/clients\");\r\n        history.push(\"/clients\");\r\n    };\r\n\r\n    const deleteThis = async () => {\r\n        deleteById(id);\r\n        //props.history.push(\"/clients\");\r\n        history.push(\"/clients\");\r\n    };\r\n\r\n    const getTitle = () => {\r\n        if(typeof(id) === 'undefined'){\r\n            return messages.fiche.client.titres.creation;\r\n        }else{\r\n            return messages.fiche.client.titres.modification + watch(\"prenom\") + ' ' + watch(\"nom\");\r\n        }\r\n    };\r\n\r\n    return (\r\n            <div className=\"card\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"card-header\">\r\n                        <h4>{getTitle()}</h4>\r\n                    </div>\r\n\r\n                    <div className=\"card-body\">\r\n                        <div className=\"form-group row mb-2\">\r\n                            <label className=\"col-md-2 col-form-label\"\r\n                                    htmlFor=\"clientNomId\">{messages.fiche.client.nom}</label>\r\n                            <div className=\"col-md-8\">\r\n                                <input className=\"form-control\"\r\n                                        id=\"clientNomId\"\r\n                                        name=\"nom\"\r\n                                        type=\"text\"\r\n                                        ref={register({ required: true, \r\n                                                        minLength: {\r\n                                                            value: 1,\r\n                                                            message: `${messages.fiche.client.validation.nom.minlength}`\r\n                                                        }\r\n                                                     })}\r\n                                        placeholder={messages.fiche.client.nomPlaceHolder}\r\n                                        required/>\r\n                                <small className=\"form-text text-danger\">{errors.nom?.message}</small>       \r\n                            </div>\r\n                        </div>\r\n                \r\n                        <div className=\"form-group row mb-2\">\r\n                            <label className=\"col-md-2 col-form-label\"\r\n                                    htmlFor=\"clientPrenomId\">{ messages.fiche.client.prenom}</label>\r\n                            <div className=\"col-md-8\">\r\n                                <input className=\"form-control\"\r\n                                        id=\"clientPrenomId\"\r\n                                        name=\"prenom\"\r\n                                        type=\"text\"\r\n                                        ref={register({ required: true, \r\n                                                        minLength: {\r\n                                                            value: 1,\r\n                                                            message: `${messages.fiche.client.validation.prenom.minlength}`\r\n                                                        }\r\n                                                    })}\r\n                                        placeholder={messages.fiche.client.prenomPlaceHolder} \r\n                                        required/>\r\n                                <small className=\"form-text text-danger\">{errors.prenom?.message}</small>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className='card-footer'>\r\n                        <button className=\"btn btn-primary mr-3\"\r\n                                style={{width: \"100px\"}}\r\n                                type=\"submit\"\r\n                                >{messages.fiche.boutons.valider}\r\n\r\n                        </button>\r\n\r\n                        <Link to=\"/clients\" className=\"btn btn-outline-secondary mr-3\" >\r\n                            {messages.fiche.boutons.annuler}\r\n                        </Link>\r\n\r\n                        <button className=\"btn btn-outline-warning\"\r\n                            style={{width: \"100px\"}}\r\n                            type=\"button\"\r\n                            title=\"{messages.fiche.boutons.supprimerTitle}\"\r\n                            onClick={deleteThis}\r\n                            disabled={typeof(id) === 'undefined'}\r\n                            >{messages.fiche.boutons.supprimer}\r\n                        </button>        \r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default ClientFicheComponent","import React, { Component } from 'react'\r\nimport messages from '../static/messages.json';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HeaderComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <header>\r\n                    <nav className=\"navbar navbar-expand-sm bg-primary navbar-dark\">\r\n                    <div>\r\n                      <Link to=\"/clients\" className=\"navbar-brand\">{ messages.liste.clients.react.titre}</Link>\r\n                    </div>\r\n                    </nav>\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeaderComponent","import React, { Component } from 'react'\r\n\r\nclass FooterComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n                 \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className = \"text-center\">\r\n                <footer className = \"footer\">\r\n                    <span className=\"text-muted\">@2020</span>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FooterComponent","export default __webpack_public_path__ + \"static/media/logo.85009280.jpg\";","import React, { Component } from 'react'\nimport logo from '../static/images/logo.jpg';\n\nclass WelcomeComponent extends Component {\n\n    constructor(props) {\n        super(props) \n\n        this.state = {\n          pageTitle : 'Bienvenue sur cette page'\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-header\">\n                    <div className=\"row\">\n                        <div className=\"col-md-8\">\n                            <h1>{this.state.pageTitle}</h1>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"container-fluid\">\n\n                    <div className=\"text-center\">\n                      <img src={logo}\n                          alt='Logo'\n                          className=\"img-responsive center-block\"\n                          style={{maxHeight: \"300px\", paddingBottom: \"50px\"}}\n                          />\n                    </div>\n              \n                    <div className=\"text-center\">Développé par:</div>\n                    <div className=\"text-center\">\n                      <h3>Daniel Vornicu</h3>\n                    </div>\n              \n                    <div className=\"text-center\">vdany2003@yahoo.com</div>\n                  </div>\n                </div>\n            </div>     \n        )\n    }\n}\n\nexport default WelcomeComponent\n","import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport ClientListeComponent from './clients/client-liste.funct.component';\nimport ClientConsultComponent from './clients/client-consult.funct.component';\nimport ClientFicheComponent from './clients/client-fiche.funct.component';\nimport HeaderComponent from './shared/header.component';\nimport FooterComponent from './shared/footer.component';\nimport WelcomeComponent from './home/welcome.component';\n\nimport { ClientContextProvider } from './contexts/ClientContext';\n\nfunction App() {\n  return (\n    <div>\n        <ClientContextProvider>\n            <BrowserRouter>\n                <HeaderComponent />\n                    <div className=\"container\">\n                        <Switch> \n                            <Route path = \"/\" exact component = {ClientListeComponent}></Route>\n                            <Route path = \"/clients\" exact component = {ClientListeComponent}></Route>\n                            <Route path = \"/clients/new\" exact component = {ClientFicheComponent}></Route>\n                            <Route path = \"/clients/:id\" exact component = {ClientConsultComponent}></Route>\n                            <Route path = \"/clients/:id/edit\" exact component = {ClientFicheComponent}></Route>\n                            <Route path = \"/welcome\" exact component = {WelcomeComponent}></Route> \n                        </Switch>\n                    </div>\n                <FooterComponent />\n            </BrowserRouter>\n        </ClientContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}